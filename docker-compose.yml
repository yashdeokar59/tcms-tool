version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: testflow_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: testflow_root_2024
      MYSQL_DATABASE: testflow_pro
      MYSQL_USER: testflow_user
      MYSQL_PASSWORD: testflow_pass_2024
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    networks:
      - app_network
    command: --default-authentication-plugin=mysql_native_password

  # PHP Application
  app:
    image: php:8.2-fpm-alpine
    container_name: testflow_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./public:/var/www/html/public
      - ./uploads:/var/www/html/public/uploads
    networks:
      - app_network
    command: sh -c "
      apk add --no-cache mysql-client &&
      docker-php-ext-install pdo_mysql mysqli &&
      php-fpm
    "

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: testflow_nginx
    restart: unless-stopped
    ports:
      - "9899:80"
    volumes:
      - ./public:/var/www/html/public:ro
    depends_on:
      - app
    networks:
      - app_network
    command: |
      sh -c "
      cat > /etc/nginx/conf.d/default.conf << 'EOF'
      server {
          listen 80;
          server_name cms-prod.baseel.com;
          root /var/www/html/public;
          index index.php index.html;
          
          location ~ \.php$$ {
              try_files $$uri =404;
              fastcgi_pass app:9000;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $$document_root$$fastcgi_script_name;
              include fastcgi_params;
          }
          
          location / {
              try_files $$uri $$uri/ /index.php?$$query_string;
          }
          
          location ~* \.(jpg|jpeg|png|gif|ico|css|js)$$ {
              expires 1y;
              add_header Cache-Control 'public, immutable';
          }
      }
      EOF
      nginx -g 'daemon off;'
      "

volumes:
  mysql_data:

networks:
  app_network:
    driver: bridge
